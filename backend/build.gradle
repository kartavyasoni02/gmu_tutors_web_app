plugins {
    id 'base'
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'jacoco'
    id 'org.springframework.boot' version '1.5.3.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '3.0.7'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.hibernate:hibernate-java8')
    compile('org.apache.commons:commons-lang3:3.6')
    compile('io.swagger:swagger-core:1.5.15')
    compile('io.swagger:swagger-annotations:1.5.15')
    compile('io.springfox:springfox-swagger2:2.7.0')

    runtime('mysql:mysql-connector-java')
    runtime('com.h2database:h2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.hamcrest:hamcrest-core:1.3')
    testCompile('org.mockito:mockito-core:2.+')
    testCompile('ch.qos.logback:logback-core')
    testCompile('com.github.npathai:hamcrest-optional:1.0')

    testRuntime('com.h2database:h2')
}

clean {
    delete 'out'
}
build.dependsOn clean

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task generateDockerfile(type: Dockerfile) {
    dependsOn build
    destFile = project.file('build/Dockerfile')
    from 'java:8'
    workingDir '/app'
    environmentVariable('MYSQL_USERNAME', System.getenv('MYSQL_USERNAME'))
    environmentVariable('MYSQL_PASSWORD', System.getenv('MYSQL_PASSWORD'))
    addFile("libs/$jar.archiveName", '/app')
    runCommand('wget https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh')
    runCommand("bash -c 'chmod +x ./wait-for-it.sh'")
    entryPoint('./wait-for-it.sh', 'db:3306','-t', '0', '-s', '--', 'java', '-Djava.security.egd=file:/dev/./urandom', '-jar', jar.archiveName)
    exposePort 8080
}

